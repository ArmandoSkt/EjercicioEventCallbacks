<div class="bg-white shadow-lg rounded overflow-hidden mb-2">
	<h4 class="bg-info bg-opacity-75 p-1 text-center fw-bolder">Sub Sample</h4>
	<div class="p-1 d-flex flex-column align-items-center">
		<p class="fs-5 text-primary fw-bold mb-1">@RealizarResta()</p>
		<button @onclick="GenerarNumerosComponenteResta"
				class="btn fw-bold btn-outline-dark d-block m-auto mb-1">
			Generar
		</button>
	</div>

</div>
@code {
	[Parameter]
	[EditorRequired]
	public ParentDetail parentDetail { get; set; } = null!; //Recibir el objeto padre
	[Parameter]
	[EditorRequired]
	public EventCallback GenerarNumerosComponenteResta { get; set; } //Evento para generar los numeros en el componente padre

	public string RealizarResta()
	{
		string cadena = parentDetail.sNumberList!;
		List<int> numeros = parentDetail.NumberList!;
		int resta = numeros[0];
		//Restará o sumará el siguiente número de acuerdo a si es par o impar respectivamente.		
		for (int i = 1; i < numeros.Count; i++)
		{
			if( numeros[i] % 2 == 0 )
			{
				resta -= numeros[i];
				continue;	
			}
			resta += numeros[i];
		}
		return cadena + " = " + resta.ToString();
	}
}
